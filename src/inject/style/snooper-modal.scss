:root {
    --blue: #0000a0;
    --lblue: #a0a0ff;
    --red: #a00000;
    --lred: #ffa0a0;
    --green: #00a000;
    --lgreen: #a0ffa0;
    --yellow: #a0a000;
    --lyellow: #ffffa0;
}

#snooper-modal-container {
    position: fixed;
    max-width: 20%;
    width: fit-content;
    height: calc(100% - 60px);
    top: 0px;
    right: 0;
    padding: 30px;
    padding-left: 4%;
    display: flex;
    flex-direction: column;
    justify-content: right;
    overflow-y: scroll;
}

@mixin modalNoGrad($important: "", $color: blue) {
    border-color: var(--$color) unquote($important);
    background-color: var(--l + ($color)) unquote($important);
}

@mixin modalGrad($important: "", $colors...) {
    border-color: black;
    $lcolors: ();
    @each $color in $colors {
        $lcolors: append($lcolors, var(--l + ($color)), comma);
    }
    background-image: linear-gradient(45deg, $lcolors...);
}

@mixin modalColor($colors...) {
    @if length($list: $colors) <= 1 {
        @include modalNoGrad("", $colors...);
    } @else {
        @include modalGrad("", $colors...);
    }
}

@mixin modalColorI($colors...) {
    @if length($list: $colors) <= 1 {
        @include modalNoGrad(!important, $colors...);
    } @else {
        @include modalGrad(!important, $colors...);
    }
}

div.snooper-modal {
    border: 2px solid;
    border-radius: 25px;
    padding: 1em;
    margin-bottom: 15px;
    max-width: max-content;
    overflow: clip;

    &::first-line {
        font-weight: bold;
    }

    &.info {
        @include modalColorI();
    }

    &.error {
        @include modalColorI(red);
    }

    &.multiple,
    &.warning {
        @include modalColorI(yellow);
    }

    & .modal-progress {
        height: 3px;
        position: relative;
        top: 1em;
        left: -1em;
        background-color: rgba($color: #000000, $alpha: 0.25);
    }

    $mcolors: decrease red, increase green, absolute blue;

    $colorstack: ();
    $namestack: ();

    @each $name, $color in $mcolors {
        $len: length($colorstack);
        @for $i from 1 through $len {
            @if $i > 0 and $i <= $len {
                $colorstack: append($colorstack, append(nth($colorstack,$i),$color));
                $namestack: append($namestack, nth($namestack,$i) + "." + $name);
            }
        }
        $colorstack: append($colorstack, ($color));
        $namestack: append($namestack, "." + ($name));

    }

    @each $namelist, $colorlist in zip($namestack, $colorstack) {
        &#{$namelist} {
            @include modalColor($colorlist...)
        }
    }
}
